# If you come from bash you might have to change your $PATH.
# export PATH=$HOME/bin:/usr/local/bin:$PATH

export PATH=$HOME/bin:/usr/local/bin:/Users/avlasyuk/Library/Python/3.12/bin:$PATH

# Path to your oh-my-zsh installation.
# export ZSH="/Users/avlasyuk/.oh-my-zsh"

# Set name of the theme to load --- if set to "random", it will
# load a random theme each time oh-my-zsh is loaded, in which case,
# to know which specific one was loaded, run: echo $RANDOM_THEME
# See https://github.com/ohmyzsh/ohmyzsh/wiki/Themes
ZSH_THEME="robbyrussell"

# Set list of themes to pick from when loading at random
# Setting this variable when ZSH_THEME=random will cause zsh to load
# a theme from this variable instead of looking in $ZSH/themes/
# If set to an empty array, this variable will have no effect.
# ZSH_THEME_RANDOM_CANDIDATES=( "robbyrussell" "agnoster" )

# Uncomment the following line to use case-sensitive completion.
# CASE_SENSITIVE="true"

# Uncomment the following line to use hyphen-insensitive completion.
# Case-sensitive completion must be off. _ and - will be interchangeable.
# HYPHEN_INSENSITIVE="true"

# Uncomment the following line to disable bi-weekly auto-update checks.
# DISABLE_AUTO_UPDATE="true"

# Uncomment the following line to automatically update without prompting.
# DISABLE_UPDATE_PROMPT="true"

# Uncomment the following line to change how often to auto-update (in days).
# export UPDATE_ZSH_DAYS=13

# Uncomment the following line if pasting URLs and other text is messed up.
DISABLE_MAGIC_FUNCTIONS="true"

# Uncomment the following line to disable colors in ls.
# DISABLE_LS_COLORS="true"

# Uncomment the following line to disable auto-setting terminal title.
# DISABLE_AUTO_TITLE="true"

# Uncomment the following line to enable command auto-correction.
# ENABLE_CORRECTION="true"

# Uncomment the following line to display red dots whilst waiting for completion.
# Caution: this setting can cause issues with multiline prompts (zsh 5.7.1 and newer seem to work)
# See https://github.com/ohmyzsh/ohmyzsh/issues/5765
# COMPLETION_WAITING_DOTS="true"

# Uncomment the following line if you want to disable marking untracked files
# under VCS as dirty. This makes repository status check for large repositories
# much, much faster.
# DISABLE_UNTRACKED_FILES_DIRTY="true"

# Uncomment the following line if you want to change the command execution time
# stamp shown in the history command output.
# You can set one of the optional three formats:
# "mm/dd/yyyy"|"dd.mm.yyyy"|"yyyy-mm-dd"
# or set a custom format using the strftime function format specifications,
# see 'man strftime' for details.
# HIST_STAMPS="mm/dd/yyyy"

# Would you like to use another custom folder than $ZSH/custom?
# ZSH_CUSTOM=/path/to/new-custom-folder

# Which plugins would you like to load?
# Standard plugins can be found in $ZSH/plugins/
# Custom plugins may be added to $ZSH_CUSTOM/plugins/
# Example format: plugins=(rails git textmate ruby lighthouse)
# Add wisely, as too many plugins slow down shell startup.
# plugins=(git zsh-autosuggestions zsh-syntax-highlighting zsh-abbr zsh-interactive-cd)
# .zshrc

function is-macos() {
  [[ $OSTYPE == darwin* ]]
}

source $HOMEBREW_PREFIX/opt/antidote/share/antidote/antidote.zsh
antidote load ${ZDOTDIR:-$HOME}/.zsh_plugins.txt

# User configuration

# export MANPATH="/usr/local/man:$MANPATH"

# You may need to manually set your language environment
# export LANG=en_US.UTF-8

# Preferred editor for local and remote sessions
# if [[ -n $SSH_CONNECTION ]]; then
#   export EDITOR='vim'
# else
#   export EDITOR='mvim'
# fi

# Compilation flags
# export ARCHFLAGS="-arch x86_64"

# Set personal aliases, overriding those provided by oh-my-zsh libs,
# plugins, and themes. Aliases can be placed here, though oh-my-zsh
# users are encouraged to define aliases within the ZSH_CUSTOM folder.
# For a full list of active aliases, run `alias`.
#
# Example aliases
# alias zshconfig="mate ~/.zshrc"
# alias ohmyzsh="mate ~/.oh-my-zsh"

export EDITOR='nvim'

alias vim="nvim"
alias mosh="env LANG=en_US.UTF-8 LC_CTYPE=en_US.UTF-8 mosh"

jq_replace() {
  if [[ $# -lt 2 ]]; then
    echo "Usage: jq_replace [options] <jq_filter> <file>"
    echo "       jq_replace [options] <jq_filter> -- <file1> [<file2> ...]"
    return 1
  fi

  local jq_args=()
  local files=()
  local found_separator=false

  for arg; do
    if [[ $found_separator == true ]]; then
      files+=("$arg")
    elif [[ $arg == "--" ]]; then
      found_separator=true
    else
      jq_args+=("$arg")
    fi
  done

  # If -- is not used, assume the last argument is file
  if [[ $found_separator == false ]]; then
    files=("${jq_args[-1]}")
    jq_args=("${jq_args[@]:0:${#jq_args[@]}-1}")
  fi

  if [[ ${#files[@]} -eq 0 ]]; then
    echo "Error: No files specified."
    return 1
  fi

  for file in "${files[@]}"; do
    if [[ ! -f $file ]]; then
      echo "Error: File '$file' not found."
      continue
    fi

    tmp_file=$(mktemp) || return 1
    if jq "${jq_args[@]}" "$file" > "$tmp_file"; then
      mv "$tmp_file" "$file"
    else
      echo "Error: jq command failed for file '$file'."
      rm "$tmp_file"
      return 1
    fi
  done
}

ya_make_vim() {
  ya make "$@" 2> >(sed 's#^junk/avlasyuk/style_merge##')
}

better() {
    local kaomojis=(
        '✿◠‿◠'
        '๑•́ ₃ •̀๑'
        '*≧ω≦'
        '╯°□°）╯︵ ┻━┻'
        '*^▽^*'
        'ヽ(´▽`)/'
        '￣︶￣'
        '٩(◕‿◕｡)۶'
        '⁀ᗢ⁀'
        '(≧∇≦)'
        '(°‿°)'
        '(｡♥‿♥｡)'
        '(╥﹏╥)'
        '(*´∇｀*)'
        '(✧ω✧)'
        '(ﾉ◕ヮ◕)ﾉ*:･ﾟ✧'
        '(๑˃ᴗ˂)ﻭ'
        '(¬‿¬)'
        '(╯︵╰,)'
        '(*￣3￣)╭'
        'ಠ‿ಠ'
        '(¬‿¬)'
        'ヘ(￣ω￣ヘ)'
        '(｀・ω・´)'
        '(ノ°▽°)ノ'
        '( •̀ ω •́ )✧'
        '(≧▽≦)'
        '(´｡• ᵕ •｡`)'
        '(＾▽＾)'
        '(*≧∀≦*)'
    )
    echo "${kaomojis[RANDOM % ${#kaomojis[@]}]}"
}

eval "$(zoxide init --cmd j zsh)"

