set encoding=utf-8
if has('win32')
    language messages en_US.utf8 
endif

" Get rid of legacy stuff
set nocompatible
set backspace=indent,eol,start

" Plugins 

set rtp+=~/.vim/bundle/vundle/
call vundle#rc()

Bundle 'gmarik/vundle'
Bundle 'tpope/vim-fugitive'
Bundle 'altercation/vim-colors-solarized'
Bundle 'ervandew/supertab'
Bundle 'kien/ctrlp.vim'
Bundle 'tpope/vim-surround'
Bundle 'tpope/vim-repeat'

" SnipMate and dependencies
Bundle 'MarcWeber/vim-addon-mw-utils'
Bundle 'tomtom/tlib_vim'
Bundle 'snipmate-snippets'
Bundle 'garbas/vim-snipmate'

Bundle 'Lokaltog/vim-powerline'
Bundle 'python.vim'
Bundle 'scrooloose/syntastic'

" Take me to where I was when last edited a file
au BufReadPost * if line("'\"") > 0 && line("'\"") <= line("$") | exe "normal g'\"" | endif

" Hide buffers instead of closing them
set hidden

" Turn on syntax highlight and show line numbers by default
syntax on
set nu

" Use system clipboard 
set clipboard=unnamed

" Enable mouse support
if has('mouse')
  set mouse=a
endif

" Turn off annoying beep sound
set visualbell
set noerrorbells

" NOTE: Shall think about better backup strategy
set nobackup
set noswapfile

" Moar history
set history=500
" Moar undo levels
set undolevels=500

set ls=2 " Status line
" Permanent ruler
"set ruler
"" Ruller: flags [format, encoding, type] line, col linesL
"set rulerformat=%50(%=%m%r%w\ %#comment#[%{&ff},\ %{strlen(&fenc)?&fenc:&enc},\ %{&ft}]%*\ %03l,%03c\ %03LL%)


set showcmd
" Highlight current line
set cursorline

" Search settings
set incsearch
set ignorecase
set smartcase
set hlsearch

" Indentation settings
filetype plugin indent on
autocmd FileType text setlocal textwidth=79
set tabstop=4
set shiftwidth=4
set smarttab
set expandtab
" ruby specific
:autocmd Filetype ruby set softtabstop=2
:autocmd Filetype ruby set shiftwidth=2
:autocmd Filetype ruby set tabstop=2

let python_highlight_all=1

" Sane regexp syntax in search mode
nnoremap / /\v
vnoremap / /\v

" Remap <leader> to , key
let mapleader = ","

" Whitespace highlighting
set listchars=tab:▸\ ,eol:¬ 
autocmd filetype html,xml set listchars-=tab:▸\ ,eol:¬ 
"highlight SpecialKey guifg=#303050
" Toggle whitespace highlighting
nmap <silent> <leader>l :set list!<CR> 

" Clear highlighted search results on Return pressed in command mode
noremap <silent> <leader>/ :nohls<CR>
"nnoremap <silent> <CR> :noh<CR><CR>

" Jump over visual rows in wrapped text, not actual lines
nnoremap j gj
nnoremap k gk

" For more rapid command insertion
nnoremap ; :

" More convenient way to return to normal mode from insert mode
inoremap jj <ESC>

" Delete to the end of line
nmap D d$

" Use <tab> to jump to matching bracket
nnoremap <tab> %
vnoremap <tab> %

" Emacs
inoremap <c-a> <esc>I
inoremap <c-e> <esc>A

" Disable arrow keys
"inoremap <Up> <NOP>
"inoremap <Down> <NOP>
"inoremap <Left> <NOP>
"inoremap <Right> <NOP>
"noremap <Up> <NOP>
"noremap <Down> <NOP>
"noremap <Left> <NOP>
"noremap <Right> <NOP>

" Move commands in inset mode
imap <C-h> <C-o>h
imap <C-j> <C-o>j
imap <C-k> <C-o>k
imap <C-l> <C-o>l

" Edit and reload vimrc
nmap <silent> <leader>ev :e $MYVIMRC<CR>
nmap <silent> <leader>sv :so $MYVIMRC<CR>
" automatically reload vimrc when it's saved
augroup AutoReloadVimRC
  au!
  " automatically reload vimrc when it's saved
  au BufWritePost $MYVIMRC so $MYVIMRC
augroup END

" Surround word with following symbol
nmap <leader>s ysiw

" Change working directory automatically
"set autochdir

if has("gui_running")
    " Hide the mouse when typing text
    set mousehide 

    " Get rid of toolbar
    set guioptions-=T 

    " Set fancy font
    if has("gui_mac") || has("gui_macvim")
        set gfn=Andale\ Mono:h13
        set fuoptions=background:Normal
    endif

    if has("gui_win32") || has("gui_win32s")
        set gfn=Consolas:h10.5:cDEFAULT 
    endif
endif

"let g:solarized_termcolors=256
set background=dark
colorscheme solarized

" Strip whitepace in file
function! StripWhitespace ()
    exec ':%s/ \+$//gc'
endfunction
map <leader>w :call StripWhitespace ()<CR>

" Resize splits when the window is resized
au VimResized * exe "normal! \<c-w>="

" CtrlP
let g:ctrlp_working_path_mode=0
let g:ctrlp_max_height=15
let g:ctrlp_custom_ignore = {
    \ 'dir':  '\.git$\|\.hg$\|\.svn$',
    \ 'file': '\.exe$\|\.so$\|\.dll$\|\.obj$\|\.lib$',
    \ 'link': 'SOME_BAD_SYMBOLIC_LINKS',
    \ }

